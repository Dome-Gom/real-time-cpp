name: real-time-cpp
on: [push,pull_request]
jobs:
  target-am335x:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.commits[0].message, '[CI SKIP]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install gcc-arm-none-eabi
      - name: build-target-am335x
        run: |
          ./target/build/build.sh am335x rebuild
          ls ./bin/ref_app.hex
        working-directory: ./ref_app/
        shell: bash
  target-avr:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.commits[0].message, '[CI SKIP]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install gcc-avr avr-libc
      - name: build-target-avr
        run: |
          ./target/build/build.sh avr rebuild
          ls ./bin/ref_app.hex
        working-directory: ./ref_app/
        shell: bash
  target-bcm2835_raspi_b:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.commits[0].message, '[CI SKIP]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install gcc-arm-none-eabi
      - name: build-target-bcm2835_raspi_b
        run: |
          ./target/build/build.sh bcm2835_raspi_b rebuild
          ls ./bin/ref_app.hex ./bin/kernel.img
        working-directory: ./ref_app/
        shell: bash
  target-lpc11c24:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.commits[0].message, '[CI SKIP]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install gcc-arm-none-eabi
      - name: build-target-lpc11c24
        run: |
          ./target/build/build.sh lpc11c24 rebuild
          ls ./bin/ref_app.hex
        working-directory: ./ref_app/
        shell: bash
  target-stm32f100:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.commits[0].message, '[CI SKIP]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install gcc-arm-none-eabi
      - name: build-target-stm32f100
        run: |
          ./target/build/build.sh stm32f100 rebuild
          ls ./bin/ref_app.hex
        working-directory: ./ref_app/
        shell: bash
  target-stm32f407:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.commits[0].message, '[CI SKIP]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install gcc-arm-none-eabi
      - name: build-target-stm32f407
        run: |
          ./target/build/build.sh stm32f407 rebuild
          ls ./bin/ref_app.hex
        working-directory: ./ref_app/
        shell: bash
  target-stm32f446:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.commits[0].message, '[CI SKIP]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install gcc-arm-none-eabi
      - name: build-target-stm32f446
        run: |
          ./target/build/build.sh stm32f446 rebuild
          ls ./bin/ref_app.hex
        working-directory: ./ref_app/
        shell: bash
  target-stm32l100c:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.commits[0].message, '[CI SKIP]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install gcc-arm-none-eabi
      - name: build-target-stm32l100c
        run: |
          ./target/build/build.sh stm32l100c rebuild
          ls ./bin/ref_app.hex
        working-directory: ./ref_app/
        shell: bash
  target-stm32l152:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.commits[0].message, '[CI SKIP]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install gcc-arm-none-eabi
      - name: build-target-stm32l152
        run: |
          ./target/build/build.sh stm32l152 rebuild
          ls ./bin/ref_app.hex
        working-directory: ./ref_app/
        shell: bash
  target-x86_64:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.commits[0].message, '[CI SKIP]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install g++-10
      - name: build-target-x86_64-w64-mingw32
        run: |
          ./target/build/build.sh x86_64-w64-mingw32 rebuild
          ls ./bin/ref_app.exe
        working-directory: ./ref_app/
        shell: bash
  benchmark_tests:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.commits[0].message, '[CI SKIP]')"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: update-tools
        run: sudo apt install g++-10
      - name: benchmark_tests
        run: ./target/build/test_app_benchmarks.sh
        working-directory: ./ref_app/
        shell: bash
